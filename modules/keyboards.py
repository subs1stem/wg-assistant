import json
from os import environ

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from wireguard.ssh import SSH


def back_button(callback_data):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data=callback_data))
    return markup


def cancel_button(callback_data):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå', callback_data=callback_data))
    return markup


def main_menu_keyboard():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    servers = json.loads(environ['SERVERS'])
    for server in servers:
        markup.insert(InlineKeyboardButton(server, callback_data=f'server:{server}'))
    return markup


def server_keyboard():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ üÜï', callback_data='add_peer'),
               InlineKeyboardButton('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã WireGuard üåê', callback_data='wg_options'),
               InlineKeyboardButton('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä üîÑ', callback_data='reboot_server'))
    return markup


def wg_options_keyboard():
    if SSH().get_wg_status():
        wg_updown_btn = InlineKeyboardButton('–û–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚¨á', callback_data='wg_state_down')
    else:
        wg_updown_btn = InlineKeyboardButton('–ü–æ–¥–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚¨Ü', callback_data='wg_state_up')
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø–∏—Ä–æ–≤ ü§ù', callback_data='get_peers'),
               InlineKeyboardButton('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ä–∞–º–∏ üìù', callback_data='config_peers'),
               InlineKeyboardButton('–ö–æ–Ω—Ñ–∏–≥ —Å–µ—Ä–≤–µ—Ä–∞ ‚öô', callback_data='get_server_config'),
               wg_updown_btn,
               InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='main_menu'))
    return markup


def peer_list_keyboard():
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å üîÑ', callback_data='get_peers'),
               InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='wg_options'))
    return markup


def config_peers_keyboard():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('–û—Ç–∫–ª—é—á–∏—Ç—å üò∂', callback_data='off_peer'),
               InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å üóëÔ∏è', callback_data='del_peer'))
    return markup


def peers_keyboard():
    peers = SSH().get_peer_names()
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    for key in peers:
        markup.insert(InlineKeyboardButton(f'{peers[key]}',
                                           callback_data=f'peer:{key}'))
    markup.add(InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='wg_options'))
    return markup


def peer_action(pubkey):
    if SSH().get_peer_enabled(pubkey):
        wg_disable_enable_btn = InlineKeyboardButton('–û—Ç–∫–ª—é—á–∏—Ç—å üìµ', callback_data=f'off_peer:{pubkey}')
    else:
        wg_disable_enable_btn = InlineKeyboardButton('–í–∫–ª—é—á–∏—Ç—å ‚úÖ', callback_data=f'on_peer:{pubkey}')
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(
        wg_disable_enable_btn,
        InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å ‚ùå', callback_data=f'del_peer:{pubkey}'),
        InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='config_peers'))
    return markup
