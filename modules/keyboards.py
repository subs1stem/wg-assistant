from aiogram.utils.keyboard import InlineKeyboardBuilder

from wireguard.ssh import SSH


def back_button(callback_data):
    kb = InlineKeyboardBuilder()
    kb.button(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data=callback_data)
    return kb.as_markup()


def cancel_button(callback_data):
    kb = InlineKeyboardBuilder()
    kb.button(text='–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå', callback_data=callback_data)
    return kb.as_markup()


def servers_kb(servers):
    kb = InlineKeyboardBuilder()

    for serverName, serverParams in servers.items():
        kb.button(text=serverName, callback_data=f'server:{serverName}')

    return kb.as_markup()


def server_keyboard():
    kb = InlineKeyboardBuilder()
    kb.row_width = 1
    kb.button(text='–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ üÜï', callback_data='add_peer')
    kb.button(text='–ü–∞—Ä–∞–º–µ—Ç—Ä—ã WireGuard üåê', callback_data='wg_options')
    kb.button(text='–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä üîÑ', callback_data='reboot_server')
    return kb.as_markup()


def wg_options_keyboard():
    kb = InlineKeyboardBuilder()
    kb.row_width = 1
    kb.button(text='–°–ø–∏—Å–æ–∫ –ø–∏—Ä–æ–≤ ü§ù', callback_data='get_peers')
    kb.button(text='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ä–∞–º–∏ üìù', callback_data='config_peers')
    kb.button(text='–ö–æ–Ω—Ñ–∏–≥ —Å–µ—Ä–≤–µ—Ä–∞ ‚öô', callback_data='get_server_config')
    if SSH().get_wg_status():
        kb.button(text='–û–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚¨á', callback_data='wg_state_down')
    else:
        kb.button(text='–ü–æ–¥–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚¨Ü', callback_data='wg_state_up')
    kb.button(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='servers')
    return kb.as_markup()


def peer_list_keyboard():
    kb = InlineKeyboardBuilder()
    kb.row_width = 1
    kb.button(text='–û–±–Ω–æ–≤–∏—Ç—å üîÑ', callback_data='get_peers')
    kb.button(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='wg_options')
    return kb.as_markup()


def config_peers_keyboard():
    kb = InlineKeyboardBuilder()
    kb.button(text='–û—Ç–∫–ª—é—á–∏—Ç—å üò∂', callback_data='off_peer')
    kb.button(text='–£–¥–∞–ª–∏—Ç—å üóëÔ∏è', callback_data='del_peer')
    return kb.as_markup()


def peers_keyboard():
    peers = SSH().get_peer_names()
    kb = InlineKeyboardBuilder()
    kb.row_width = 2
    for key in peers:
        kb.button(f'{peers[key]}', callback_data=f'peer:{key}')
    kb.button(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='wg_options')
    return kb.as_markup()


def peer_action(pubkey):
    kb = InlineKeyboardBuilder()
    kb.row_width = 1
    if SSH().get_peer_enabled(pubkey):
        kb.button(text='–û—Ç–∫–ª—é—á–∏—Ç—å üìµ', callback_data=f'off_peer:{pubkey}')
    else:
        kb.button(text='–í–∫–ª—é—á–∏—Ç—å ‚úÖ', callback_data=f'on_peer:{pubkey}')
    kb.button(text='–£–¥–∞–ª–∏—Ç—å ‚ùå', callback_data=f'del_peer:{pubkey}')
    kb.button(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='config_peers')
    return kb.as_markup()
